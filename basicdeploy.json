{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "virtualNetwork_name": {
            "type": "string",
            "defaultValue": "[concat(resourceGroup().name,'-vnet')]"
        },
        "subnetworks": {
            "type": "array",
            "defaultValue": [
                {
                    "name": "snet-enterprise",
                    "addressPrefix": "10.0.0.0/24"
                },
                {
                    "name": "snet-wvd",
                    "addressPrefix": "10.0.1.0/24"
                }
            ]
        },
        "subnetNameOfAD": {
            "type": "string",
            "defaultValue": "snet-enterprise"
        },
        "virtualMachineName": {
            "type": "string",
            "defaultValue": "adds01"
        },
        "adminUsername": {
            "type": "string"
        },
        "adminPassword": {
            "type": "securestring"
        },
        "fileUris": {
            "type": "string",
            "defaultValue": "https://raw.githubusercontent.com/hogeda/PPTWvdPoCEnvironment/main/ConfigureADDS.ps1"
        },
        "domainName": {
            "type": "string",
            "defaultValue": "lab.hogeda.com"
        },//"-domainName -safeModeAdministratorPassword",
        "safeModeAdministratorPassword":{
            "type": "securestring"
        }
    },
    "variables": {
        "vnetId": "[resourceId('Microsoft.Network/virtualNetworks',parameters('virtualNetwork_name'))]",
        "subnetRef": "[concat(variables('vnetId'), '/subnets/', parameters('subnetNameOfAD'))]",
        "UriFileNamePieces": "[split(parameters('fileUris'), '/')]",
        "firstFileNameString": "[variables('UriFileNamePieces')[sub(length(variables('UriFileNamePieces')), 1)]]",
        "firstFileNameBreakString": "[split(variables('firstFileNameString'), '?')]",
        "firstFileName": "[variables('firstFileNameBreakString')[0]]",
        "argument": "[concat('-domainName ', parameters('domainName'), ' -safeModeAdministratorPassword ', parameters('safeModeAdministratorPassword'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-08-01",
            "name": "[parameters('virtualNetwork_name')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/16"
                    ]
                },
                // "dhcpOptions": {
                //    "dnsServers": [
                //        "10.0.0.4"
                //    ]
                // },
                "enableDdosProtection": false
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2020-08-01",
            "name": "[concat(parameters('virtualNetwork_name'),'/',parameters('subnetworks')[copyIndex()].name)]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks',parameters('virtualNetwork_name'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups',concat(parameters('subnetworks')[copyIndex()].name,'-nsg'))]"
            ],
            "copy": {
                "name": "subnet-loop",
                "count": "[length(parameters('subnetworks'))]"
            },
            "properties": {
                "addressPrefix": "[parameters('subnetworks')[copyIndex()].addressPrefix]",
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups',concat(parameters('subnetworks')[copyIndex()].name,'-nsg'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-08-01",
            "name": "[concat(parameters('subnetworks')[copyIndex()].name,'-nsg')]",
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "nsg-loop",
                "count": "[length(parameters('subnetworks'))]"
            },
            "properties": {
                "securityRules": [
                    {
                        "name": "AllowAzureCloudInBound",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "AzureCloud",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowAzureCloudOutBound",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "AzureCloud",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2018-10-01",
            "name": "[concat(parameters('virtualMachineName'),'-nic')]",
            "dependsOn": [
                "[variables('subnetRef')]"
            ],
            "location": "[resourceGroup().location]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "10.0.0.4",
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ]
            }
        },
        {
            "name": "[parameters('virtualMachineName')]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2020-12-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('virtualMachineName'),'-nic'))]",
                "[resourceId('Microsoft.Compute/availabilitySets', concat('as-', parameters('virtualMachineName')))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_B2s"
                },
                "storageProfile": {
                    "osDisk": {
                        "name": "[concat(parameters('virtualMachineName'),'_OsDisk')]",
                        "createOption": "fromImage",
                        "managedDisk": {
                            "storageAccountType": "Standard_LRS"
                        }
                    },
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "2019-Datacenter",
                        "version": "latest"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('virtualMachineName'),'-nic'))]"
                        }
                    ]
                },
                "securityProfile": {},
                "osProfile": {
                    "computerName": "[parameters('virtualMachineName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "windowsConfiguration": {
                        "enableAutomaticUpdates": true,
                        "provisionVmAgent": true,
                        "patchSettings": {
                            "enableHotpatching": false,
                            "patchMode": "AutomaticByOS"
                        }
                    }
                },
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', concat('as-', parameters('virtualMachineName')))]"
                }
            }
        },
        {
            "name": "[concat('as-', parameters('virtualMachineName'))]",
            "type": "Microsoft.Compute/availabilitySets",
            "apiVersion": "2019-07-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "platformFaultDomainCount": 2,
                "platformUpdateDomainCount": 5
            },
            "sku": {
                "name": "Aligned"
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "2015-06-15",
            "name": "[concat(parameters('virtualMachineName'),'/ConfigureADDS')]",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachineName'))]"
            ],
            "location": "[resourceGroup().location]",
            "properties": {
                "publisher": "Microsoft.Compute",
                "type": "CustomScriptExtension",
                "typeHandlerVersion": "1.9",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "fileUris": "[split(parameters('fileUris'), ' ')]"
                },
                "protectedSettings": {
                    "commandToExecute": "[concat ('powershell -ExecutionPolicy Unrestricted -File ', variables('firstFileName'), ' ', variables('argument'))]"
                }
            }
        }
    ]
}